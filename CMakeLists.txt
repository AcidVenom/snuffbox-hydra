CMAKE_MINIMUM_REQUIRED(VERSION 3.10.1)
PROJECT(snuffbox-hydra)

SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_MODULE_PATH "${CMAKE_ROOT}/Modules ${CMAKE_CURRENT_SOURCE_DIR}/cmake")

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")

IF (MSVC)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MP")
ENDIF (MSVC)

ADD_DEFINITIONS("-DGLM_FORCE_CXX98")

IF (WIN32)
  SET(SNUFF_WIN32 ON)
	ADD_DEFINITIONS (-DSNUFF_WIN32)
ELSEIF (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  SET(SNUFF_LINUX ON)
	ADD_DEFINITIONS (-DSNUFF_LINUX)
ELSEIF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  SET(SNUFF_OSX ON)
	ADD_DEFINITIONS (-DSNUFF_OSX)
ENDIF (WIN32)

IF (SNUFF_WIN32)
  SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /WX")
  
  SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
  SET_PROPERTY(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER "cmake-targets")
ELSEIF (SNUFF_LINUX)
  SET (CMAKE_CXX_STANDARD 14)
  SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
ELSE ()
  MESSAGE(FATAL_ERROR "Unknown copmiler platform")
ENDIF (SNUFF_WIN32)

SET(SNUFF_BUILD_TEST ON CACHE BOOL "Should the snuffbox-test project be built?")
SET(SNUFF_BUILD_EDITOR ON CACHE BOOL "Should the editor project be built?")
SET(SNUFF_SCRIPTING "duktape" CACHE STRING "The type of scripting environment to build")
SET(SNUFF_ENCRYPTION_KEY "snuffbox" CACHE STRING "The encytpion key/salt to use for encryption algorithms")
SET_PROPERTY(CACHE SNUFF_SCRIPTING PROPERTY STRINGS duktape disabled)
SET(SNUFF_FORCE_OGL OFF CACHE BOOL "Should OpenGL be used on Windows based platforms?")

IF (SNUFF_SCRIPTING STREQUAL "duktape")
  SET(SNUFF_DUKTAPE ON)
  ADD_DEFINITIONS("-DSNUFF_DUKTAPE")
ELSEIF (SNUFF_SCRIPTING STREQUAL "disabled")
  SET(SNUFF_NSCRIPTING ON)
  ADD_DEFINITIONS("-DSNUFF_NSCRIPTING")
ENDIF ()

IF (SNUFF_FORCE_OGL OR SNUFF_LINUX)
  MESSAGE(STATUS "Using the OpenGL renderer for Snuffbox")
  SET(SNUFF_OGL ON)
  ADD_DEFINITIONS("-DSNUFF_OGL")
ELSE()
  IF (SNUFF_WIN32)
    SET(SNUFF_D3D_VERSION "11" CACHE STRING "The Direct3D version to use, if not building for OpenGL")
    SET_PROPERTY(CACHE SNUFF_D3D_VERSION PROPERTY STRINGS "11" "12")
  
    MESSAGE(STATUS "Using the DirectX ${SNUFF_D3D_VERSION} renderer for Snuffbox")
    SET(SNUFF_D3D${SNUFF_D3D_VERSION} ON)
    ADD_DEFINITIONS("-DSNUFF_D3D${SNUFF_D3D_VERSION}")
  ELSE()
    MESSAGE(FATAL_ERROR "Attempted to use an OpenGL renderer on an unsupported platform")
  ENDIF(SNUFF_WIN32)
ENDIF(SNUFF_FORCE_OGL OR SNUFF_LINUX)

IF (SNUFF_BUILD_TOOLS)
  SET(CMAKE_PREFIX_PATH "Qt/5.10.1/msvc2015_64" CACHE STRING "")
  FIND_PACKAGE(Qt5 COMPONENTS Widgets REQUIRED)
  
  IF (NOT Qt5_FOUND)
    MESSAGE(FATAL_ERROR "In order to build the tools projects, Qt5 needs to be installed on the system")
  ENDIF ()
ENDIF (SNUFF_BUILD_TOOLS)

ADD_SUBDIRECTORY("cmake")
ADD_SUBDIRECTORY("deps")

ADD_DEFINITIONS("-DSNUFF_ENCRYPTION_KEY=\"${SNUFF_ENCRYPTION_KEY}\"")

ADD_SUBDIRECTORY("src")
